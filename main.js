!function(){"use strict";var e,t,n,r,s,i,o={627:function(e,t,n){n.a(e,(async function(e,t){try{var r=n(615),s=n(937),i=n(231),o=n(557),a=n(869),c=n(90),l=n(492),u=n(695),h=n(415);const e=new u.Z({selectors:h.py}),p=new r.Z("https://around.nomoreparties.co/v1/group-12","1ef576b8-6d38-4f6c-aed4-fbb58187f608");var _=await p.getUserInfo(),d=null;e.setUserInfo(_),e.setUserAvatar(_.avatar);const m=await p.getInitialCards(),f=new c.Z("#edit-container",(t=>{f.renderLoading(!0),p.updateUserData(t).then((t=>{_=t,e.setUserInfo(t)})).finally((()=>{f.renderLoading(!1),f.close()}))})),k=e=>{const t=new s.Z({data:e,clickHandler:(e,t)=>{b.open(e,t)},likeHandler:e=>{e.isLiked?(e.unlikeCard(),p.unlikeCard(e.id).then((t=>e.setLikeCount(t.likes.length)))):(e.likeCard(),p.likeCard(e.id).then((t=>e.setLikeCount(t.likes.length))))},deleteHandler:e=>{d=e,y.open()},userObj:_},h.IT);return e.owner._id===_._id?t.initiateCard(!0):t.initiateCard(!1)},v=new c.Z("#add-container",(e=>{v.renderLoading(!0),p.addNewCard(e).then((e=>k(e))).then((e=>{C.addItem(e)})).finally((()=>{v.renderLoading(!1),v.close()}))})),E=new c.Z("#avatar-container",(t=>{E.renderLoading(!0),p.updateUserAvatar(t).then((t=>{e.setUserAvatar(t.avatar),_=t})).finally((()=>{E.renderLoading(!1),E.close()}))})),y=new l.Z("#delete-container",(()=>{p.deleteCard(d.id).then(d.deleteCard()),y.close(),d=null})),b=new a.Z("#image-container"),C=new i.Z({items:m,renderer:e=>{const t=k(e);C.addItem(t)}},".gallery__container");h.sz.forEach((e=>{new o.Z(e,h.y6).enableValidation()})),C.renderItems(),f.setEventListeners(),v.setEventListeners(),E.setEventListeners(),y.setEventListeners(),b.setEventListeners(),h.S1.addEventListener("click",(()=>{const t=e.getUserInfo();f.open(),h.po.value=t.name,h.t0.value=t.about})),h.K0.addEventListener("click",(()=>{v.open()})),h.vs.addEventListener("click",(()=>{E.open()})),t()}catch(e){t(e)}}),1)},615:function(e,t,n){n.d(t,{Z:function(){return r}});class r{constructor(e,t){this._baseUrl=e,this._token=t}getUserInfo(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:{authorization:"".concat(this._token)}}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status)))).catch((e=>{console.log(e)}))}getInitialCards(){return fetch("".concat(this._baseUrl,"/cards"),{headers:{authorization:"".concat(this._token)}}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status)))).catch((e=>{console.log(e)}))}updateUserData(e){return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:{authorization:"".concat(this._token),"Content-Type":"application/json"},body:JSON.stringify({name:e.name,about:e.about})}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status)))).catch((e=>{console.log(e)}))}updateUserAvatar(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:{authorization:"".concat(this._token),"Content-Type":"application/json"},body:JSON.stringify({avatar:e.avatar})}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status)))).catch((e=>{console.log(e)}))}addNewCard(e){return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:{authorization:"".concat(this._token),"Content-Type":"application/json"},body:JSON.stringify({name:e.name,link:e.link})}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status)))).catch((e=>{console.log(e)}))}deleteCard(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:{authorization:"".concat(this._token)}})}likeCard(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:{authorization:"".concat(this._token)}}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status)))).catch((e=>{console.log(e)}))}unlikeCard(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"Delete",headers:{authorization:"".concat(this._token)}}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status)))).catch((e=>{console.log(e)}))}}},937:function(e,t,n){n.d(t,{Z:function(){return r}});class r{constructor(e,t){let{data:n,clickHandler:r,likeHandler:s,deleteHandler:i,userObj:o}=e;this._name=n.name,this._link=n.link,this._likes=n.likes,this.id=n._id,this._selectors=t,this._handleCardClick=r,this._handleLikeClick=s,this._handleDeleteClick=i,this._userID=o._id,this.isLiked=!1}_getTemplate(){return document.querySelector(this._selectors.templateSelector).content.querySelector(this._selectors.cardSelector).cloneNode(!0)}_checkLikes(){this._likes.forEach((e=>{e._id==this._userID&&(this.isLiked=!0)}))}initiateCard(e){this._checkLikes(),this._cardElement=this._getTemplate();const t=this._cardElement.querySelector(this._selectors.titleSelector);return this._image=this._cardElement.querySelector(this._selectors.imageSelector),this._like=this._cardElement.querySelector(this._selectors.likeSelector),this.isLiked&&this._like.classList.add(this._selectors.likeActiveClass),this._likeCount=this._cardElement.querySelector(this._selectors.likeCountSelector),this.setLikeCount(this._likes.length),this._delete=this._cardElement.querySelector(this._selectors.deleteSelector),t.textContent=this._name,this._image.alt="A picture of ".concat(this._name,"."),this._image.src=this._link,e?(this._setEventListeners(!0),this._cardElement):(this._delete.remove(),this._setEventListeners(!1),this._cardElement)}setLikeCount(e){return this._likeCount.textContent=e}_setEventListeners(e){this._like.addEventListener("click",(()=>{this._handleLikeClick(this)})),this._image.addEventListener("click",(()=>{this._handleCardClick(this._name,this._link)})),e&&this._delete.addEventListener("click",(()=>{this._handleDeleteClick(this)}))}likeCard(){this._like.classList.add(this._selectors.likeActiveClass),this.isLiked=!0}unlikeCard(){this._like.classList.remove(this._selectors.likeActiveClass),this.isLiked=!1}deleteCard(){this._cardElement.remove()}}},557:function(e,t,n){n.d(t,{Z:function(){return r}});class r{constructor(e,t){this._formElement=document.querySelector(e),this._keys=t}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}_setEventListeners(){this._inputList=[...this._formElement.querySelectorAll(this._keys.inputSelector)],this._buttonElement=this._formElement.querySelector(this._keys.submitButtonSelector),this._toggleButtonState(),this._formElement.addEventListener("reset",(()=>{this._toggleButtonState()})),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_showInputError(e,t){const n=this._formElement.querySelector(".popup__error_type_".concat(e.id));e.classList.add(this._keys.inputErrorClass),n.textContent=t,n.classList.add(this._keys.errorClass)}_hideInputError(e){const t=this._formElement.querySelector(".popup__error_type_".concat(e.id));e.classList.remove(this._keys.inputErrorClass),t.textContent="",t.classList.remove(this._keys.errorClass)}_toggleButtonState(){this._hasInvalidInput(this._inputList)?(this._buttonElement.classList.add(this._keys.inactiveButtonClass),this._buttonElement.setAttribute("disabled",!0)):(this._buttonElement.classList.remove(this._keys.inactiveButtonClass),this._buttonElement.removeAttribute("disabled"))}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}}},609:function(e,t,n){function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}n.d(t,{Z:function(){return s}});class s{constructor(e){r(this,"_handleEscClose",(e=>{"Escape"===e.key&&this.close()})),r(this,"_handleClickClose",(e=>{e.target.classList.contains("popup")&&this.close()})),this._popupElement=document.querySelector(e),this._closeButton=this._popupElement.querySelector(".popup__exit-button")}close(){this._popupElement.classList.add("invisible"),document.removeEventListener("keydown",this._handleEscClose)}open(){this._popupElement.classList.remove("invisible"),document.addEventListener("keydown",this._handleEscClose)}setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("mousedown",this._handleClickClose)}}},492:function(e,t,n){n.d(t,{Z:function(){return s}});var r=n(609);class s extends r.Z{constructor(e,t){super(e),this._clickHandler=t,this._confirmButton=this._popupElement.querySelector(".popup__button")}setEventListeners(){this._confirmButton.addEventListener("click",(()=>{this._clickHandler()})),super.setEventListeners()}}},90:function(e,t,n){n.d(t,{Z:function(){return s}});var r=n(609);class s extends r.Z{constructor(e,t){var n,r;super(e),r=e=>this._submitButton.textContent=e?"Saving...":this._submitButton.name,(n="renderLoading")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._submitHandler=t,this._formElement=this._popupElement.querySelector(".popup__form"),this._submitButton=this._formElement.querySelector(".popup__button")}_getInputValues(){const e=this._formElement.querySelectorAll(".popup__input"),t={};return e.forEach((e=>{t["".concat(e.name)]=e.value})),t}setEventListeners(){this._formElement.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._submitHandler(t)})),super.setEventListeners()}close(){this._formElement.reset(),super.close()}open(){this._formElement.reset(),super.open()}}},869:function(e,t,n){n.d(t,{Z:function(){return s}});var r=n(609);class s extends r.Z{constructor(e){super(e)}open(e,t){const n=this._popupElement.querySelector(".popup__image"),r=this._popupElement.querySelector(".popup__image-title");n.src=t,n.alt="Image of ".concat(e),r.textContent=e,super.open()}}},231:function(e,t,n){n.d(t,{Z:function(){return r}});class r{constructor(e,t){let{items:n,renderer:r}=e;this._items=n,this._renderer=r,this._container=document.querySelector(t)}renderItems(){return this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}},695:function(e,t,n){n.d(t,{Z:function(){return r}});class r{constructor(e){let{selectors:t}=e;this._selectors=t,this._userName=document.querySelector(this._selectors.nameSelector),this._userJob=document.querySelector(this._selectors.jobSelector),this._userAvatar=document.querySelector(this._selectors.imageSelector)}getUserInfo(){return{name:this._userName.textContent,about:this._userJob.textContent}}setUserInfo(e){this._userName.textContent=e.name,this._userJob.textContent=e.about}setUserAvatar(e){this._userAvatar.src=e}}},415:function(e,t,n){n.d(t,{IT:function(){return s},K0:function(){return c},S1:function(){return a},po:function(){return i},py:function(){return h},sz:function(){return u},t0:function(){return o},vs:function(){return l},y6:function(){return r}});const r={inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},s={templateSelector:"#card-template",likeActiveClass:"gallery__button_active",deleteSelector:".gallery__delete-button",likeSelector:".gallery__button",imageSelector:".gallery__image",titleSelector:".gallery__title",cardSelector:".gallery__cell",likeCountSelector:".gallery__like-count"},i=document.querySelector("#name"),o=document.querySelector("#job"),a=document.querySelector(".profile__edit-button"),c=document.querySelector(".profile__add-button"),l=document.querySelector(".profile__avatar-button"),u=["#edit-bio","#add-image","#edit-avatar"],h={nameSelector:".profile__name",jobSelector:".profile__career",imageSelector:".profile__avatar"}}},a={};function c(e){var t=a[e];if(void 0!==t)return t.exports;var n=a[e]={exports:{}};return o[e](n,n.exports,c),n.exports}e="function"==typeof Symbol?Symbol("webpack then"):"__webpack_then__",t="function"==typeof Symbol?Symbol("webpack exports"):"__webpack_exports__",n="function"==typeof Symbol?Symbol("webpack error"):"__webpack_error__",r=function(e){e&&(e.forEach((function(e){e.r--})),e.forEach((function(e){e.r--?e.r++:e()})))},s=function(e){!--e.r&&e()},i=function(e,t){e?e.push(t):s(t)},c.a=function(o,a,c){var l,u,h,_=c&&[],d=o.exports,p=!0,m=!1,f=function(t,n,r){m||(m=!0,n.r+=t.length,t.map((function(t,s){t[e](n,r)})),m=!1)},k=new Promise((function(e,t){h=t,u=function(){e(d),r(_),_=0}}));k[t]=d,k[e]=function(e,t){if(p)return s(e);l&&f(l,e,t),i(_,e),k.catch(t)},o.exports=k,a((function(o){var a;l=function(o){return o.map((function(o){if(null!==o&&"object"==typeof o){if(o[e])return o;if(o.then){var a=[];o.then((function(e){c[t]=e,r(a),a=0}),(function(e){c[n]=e,r(a),a=0}));var c={};return c[e]=function(e,t){i(a,e),o.catch(t)},c}}var l={};return l[e]=function(e){s(e)},l[t]=o,l}))}(o);var c=function(){return l.map((function(e){if(e[n])throw e[n];return e[t]}))},u=new Promise((function(e,t){(a=function(){e(c)}).r=0,f(l,a,t)}));return a.r?u:c()}),(function(e){e&&h(k[n]=e),u()})),p=!1},c.d=function(e,t){for(var n in t)c.o(t,n)&&!c.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},c.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},c(627)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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WSxXQUFhLE9BQU9sQixFQUFZUSxLQUFJLFNBQVNXLEdBQzVELEdBQUdBLEVBQUVqUCxHQUFlLE1BQU1pUCxFQUFFalAsR0FDNUIsT0FBT2lQLEVBQUVsUCxPQUVOME8sRUFBVSxJQUFJNUksU0FBUSxTQUFTNkksRUFBUzVJLElBQzNDMkgsRUFBSyxXQUFhaUIsRUFBUU0sS0FDdkJ0QixFQUFJLEVBQ1BRLEVBQVFKLEVBQWFMLEVBQUkzSCxNQUUxQixPQUFPMkgsRUFBR0MsRUFBSWUsRUFBVU8sT0FDdEIsU0FBUy9JLEdBQU9BLEdBQU9ILEVBQU8ySSxFQUFRek8sR0FBZ0JpRyxHQUFNOEgsT0FDL0RDLEdBQWUsR2EzRWhCaEIsRUFBb0JpQyxFQUFJLFNBQVM3QixFQUFTOEIsR0FDekMsSUFBSSxJQUFJcEUsS0FBT29FLEVBQ1hsQyxFQUFvQm1DLEVBQUVELEVBQVlwRSxLQUFTa0MsRUFBb0JtQyxFQUFFL0IsRUFBU3RDLElBQzVFc0UsT0FBT0MsZUFBZWpDLEVBQVN0QyxFQUFLLENBQUV3RSxZQUFZLEVBQU1DLElBQUtMLEVBQVdwRSxNQ0ozRWtDLEVBQW9CbUMsRUFBSSxTQUFTOU0sRUFBS21OLEdBQVEsT0FBT0osT0FBT0ssVUFBVUMsZUFBZUMsS0FBS3ROLEVBQUttTixJQ0dyRXhDLEVBQW9CLEsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80L3dlYnBhY2svcnVudGltZS9hc3luYyBtb2R1bGUiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9wYWdlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9BcGkuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1BvcHVwV2l0aENvbmZpcm1hdGlvbi5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9zY3JpcHRzL3V0aWxzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80L3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80L3dlYnBhY2svc3RhcnR1cCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgd2VicGFja1RoZW4gPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgPyBTeW1ib2woXCJ3ZWJwYWNrIHRoZW5cIikgOiBcIl9fd2VicGFja190aGVuX19cIjtcbnZhciB3ZWJwYWNrRXhwb3J0cyA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiA/IFN5bWJvbChcIndlYnBhY2sgZXhwb3J0c1wiKSA6IFwiX193ZWJwYWNrX2V4cG9ydHNfX1wiO1xudmFyIHdlYnBhY2tFcnJvciA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiA/IFN5bWJvbChcIndlYnBhY2sgZXJyb3JcIikgOiBcIl9fd2VicGFja19lcnJvcl9fXCI7XG52YXIgY29tcGxldGVRdWV1ZSA9IGZ1bmN0aW9uKHF1ZXVlKSB7XG5cdGlmKHF1ZXVlKSB7XG5cdFx0cXVldWUuZm9yRWFjaChmdW5jdGlvbihmbikgeyBmbi5yLS07IH0pO1xuXHRcdHF1ZXVlLmZvckVhY2goZnVuY3Rpb24oZm4pIHsgZm4uci0tID8gZm4ucisrIDogZm4oKTsgfSk7XG5cdH1cbn1cbnZhciBjb21wbGV0ZUZ1bmN0aW9uID0gZnVuY3Rpb24oZm4pIHsgIS0tZm4uciAmJiBmbigpOyB9O1xudmFyIHF1ZXVlRnVuY3Rpb24gPSBmdW5jdGlvbihxdWV1ZSwgZm4pIHsgcXVldWUgPyBxdWV1ZS5wdXNoKGZuKSA6IGNvbXBsZXRlRnVuY3Rpb24oZm4pOyB9O1xudmFyIHdyYXBEZXBzID0gZnVuY3Rpb24oZGVwcykgeyByZXR1cm4gZGVwcy5tYXAoZnVuY3Rpb24oZGVwKSB7XG5cdGlmKGRlcCAhPT0gbnVsbCAmJiB0eXBlb2YgZGVwID09PSBcIm9iamVjdFwiKSB7XG5cdFx0aWYoZGVwW3dlYnBhY2tUaGVuXSkgcmV0dXJuIGRlcDtcblx0XHRpZihkZXAudGhlbikge1xuXHRcdFx0dmFyIHF1ZXVlID0gW107XG5cdFx0XHRkZXAudGhlbihmdW5jdGlvbihyKSB7XG5cdFx0XHRcdG9ialt3ZWJwYWNrRXhwb3J0c10gPSByO1xuXHRcdFx0XHRjb21wbGV0ZVF1ZXVlKHF1ZXVlKTtcblx0XHRcdFx0cXVldWUgPSAwO1xuXHRcdFx0fSwgZnVuY3Rpb24oZSkge1xuXHRcdFx0XHRvYmpbd2VicGFja0Vycm9yXSA9IGU7XG5cdFx0XHRcdGNvbXBsZXRlUXVldWUocXVldWUpO1xuXHRcdFx0XHRxdWV1ZSA9IDA7XG5cdFx0XHR9KTtcblx0XHRcdHZhciBvYmogPSB7fTtcblx0XHRcdG9ialt3ZWJwYWNrVGhlbl0gPSBmdW5jdGlvbihmbiwgcmVqZWN0KSB7IHF1ZXVlRnVuY3Rpb24ocXVldWUsIGZuKSwgZGVwWydjYXRjaCddKHJlamVjdCk7IH07XG5cdFx0XHRyZXR1cm4gb2JqO1xuXHRcdH1cblx0fVxuXHR2YXIgcmV0ID0ge307XG5cdHJldFt3ZWJwYWNrVGhlbl0gPSBmdW5jdGlvbihmbikgeyBjb21wbGV0ZUZ1bmN0aW9uKGZuKTsgfTtcblx0cmV0W3dlYnBhY2tFeHBvcnRzXSA9IGRlcDtcblx0cmV0dXJuIHJldDtcbn0pOyB9O1xuX193ZWJwYWNrX3JlcXVpcmVfXy5hID0gZnVuY3Rpb24obW9kdWxlLCBib2R5LCBoYXNBd2FpdCkge1xuXHR2YXIgcXVldWUgPSBoYXNBd2FpdCAmJiBbXTtcblx0dmFyIGV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cztcblx0dmFyIGN1cnJlbnREZXBzO1xuXHR2YXIgb3V0ZXJSZXNvbHZlO1xuXHR2YXIgcmVqZWN0O1xuXHR2YXIgaXNFdmFsdWF0aW5nID0gdHJ1ZTtcblx0dmFyIG5lc3RlZCA9IGZhbHNlO1xuXHR2YXIgd2hlbkFsbCA9IGZ1bmN0aW9uKGRlcHMsIG9uUmVzb2x2ZSwgb25SZWplY3QpIHtcblx0XHRpZiAobmVzdGVkKSByZXR1cm47XG5cdFx0bmVzdGVkID0gdHJ1ZTtcblx0XHRvblJlc29sdmUuciArPSBkZXBzLmxlbmd0aDtcblx0XHRkZXBzLm1hcChmdW5jdGlvbihkZXAsIGkpIHsgZGVwW3dlYnBhY2tUaGVuXShvblJlc29sdmUsIG9uUmVqZWN0KTsgfSk7XG5cdFx0bmVzdGVkID0gZmFsc2U7XG5cdH07XG5cdHZhciBwcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqKSB7XG5cdFx0cmVqZWN0ID0gcmVqO1xuXHRcdG91dGVyUmVzb2x2ZSA9IGZ1bmN0aW9uKCkgeyByZXNvbHZlKGV4cG9ydHMpLCBjb21wbGV0ZVF1ZXVlKHF1ZXVlKSwgcXVldWUgPSAwOyB9O1xuXHR9KTtcblx0cHJvbWlzZVt3ZWJwYWNrRXhwb3J0c10gPSBleHBvcnRzO1xuXHRwcm9taXNlW3dlYnBhY2tUaGVuXSA9IGZ1bmN0aW9uKGZuLCByZWplY3RGbikge1xuXHRcdGlmIChpc0V2YWx1YXRpbmcpIHsgcmV0dXJuIGNvbXBsZXRlRnVuY3Rpb24oZm4pOyB9XG5cdFx0aWYgKGN1cnJlbnREZXBzKSB3aGVuQWxsKGN1cnJlbnREZXBzLCBmbiwgcmVqZWN0Rm4pO1xuXHRcdHF1ZXVlRnVuY3Rpb24ocXVldWUsIGZuKTtcblx0XHRwcm9taXNlWydjYXRjaCddKHJlamVjdEZuKTtcblx0fTtcblx0bW9kdWxlLmV4cG9ydHMgPSBwcm9taXNlO1xuXHRib2R5KGZ1bmN0aW9uKGRlcHMpIHtcblx0XHRjdXJyZW50RGVwcyA9IHdyYXBEZXBzKGRlcHMpO1xuXHRcdHZhciBmbjtcblx0XHR2YXIgZ2V0UmVzdWx0ID0gZnVuY3Rpb24oKSB7IHJldHVybiBjdXJyZW50RGVwcy5tYXAoZnVuY3Rpb24oZCkge1xuXHRcdFx0aWYoZFt3ZWJwYWNrRXJyb3JdKSB0aHJvdyBkW3dlYnBhY2tFcnJvcl07XG5cdFx0XHRyZXR1cm4gZFt3ZWJwYWNrRXhwb3J0c107XG5cdFx0fSk7IH1cblx0XHR2YXIgcHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuXHRcdFx0Zm4gPSBmdW5jdGlvbigpIHsgcmVzb2x2ZShnZXRSZXN1bHQpOyB9O1xuXHRcdFx0Zm4uciA9IDA7XG5cdFx0XHR3aGVuQWxsKGN1cnJlbnREZXBzLCBmbiwgcmVqZWN0KTtcblx0XHR9KTtcblx0XHRyZXR1cm4gZm4uciA/IHByb21pc2UgOiBnZXRSZXN1bHQoKTtcblx0fSwgZnVuY3Rpb24oZXJyKSB7IGVyciAmJiByZWplY3QocHJvbWlzZVt3ZWJwYWNrRXJyb3JdID0gZXJyKSwgb3V0ZXJSZXNvbHZlKCk7IH0pO1xuXHRpc0V2YWx1YXRpbmcgPSBmYWxzZTtcbn07IiwiaW1wb3J0IFwiLi9pbmRleC5jc3NcIjtcclxuaW1wb3J0IEFwaSBmcm9tIFwiLi4vc2NyaXB0cy9jb21wb25lbnRzL0FwaS5qc1wiO1xyXG5pbXBvcnQgQ2FyZCBmcm9tIFwiLi4vc2NyaXB0cy9jb21wb25lbnRzL0NhcmQuanNcIjtcclxuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL3NjcmlwdHMvY29tcG9uZW50cy9TZWN0aW9uLmpzXCI7XHJcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9zY3JpcHRzL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4uL3NjcmlwdHMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi4vc2NyaXB0cy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aENvbmZpcm1hdGlvbiBmcm9tIFwiLi4vc2NyaXB0cy9jb21wb25lbnRzL1BvcHVwV2l0aENvbmZpcm1hdGlvbi5qc1wiO1xyXG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4uL3NjcmlwdHMvY29tcG9uZW50cy9Vc2VySW5mby5qc1wiO1xyXG5pbXBvcnQgeyB2YWxpZGF0aW9uT2JqLCBjYXJkU2VsZWN0b3JMaXN0LCBpbnB1dE5hbWUsIFxyXG4gIGlucHV0Sm9iLCBlZGl0QnV0dG9uLCBhZGRCdXR0b24sIGZvcm1TZWxlY3RvcnMsIHVzZXJTZWxlY3RvcnMsIGF2YXRhckJ1dHRvbiB9IGZyb20gXCIuLi9zY3JpcHRzL3V0aWxzL2NvbnN0YW50cy5qc1wiO1xyXG5cclxuY29uc3QgdXNlckJpbyA9IG5ldyBVc2VySW5mbyh7IHNlbGVjdG9yczogdXNlclNlbGVjdG9ycyB9KTtcclxuXHJcbmNvbnN0IHByb2plY3RBcGkgPSBuZXcgQXBpKFwiaHR0cHM6Ly9hcm91bmQubm9tb3JlcGFydGllcy5jby92MS9ncm91cC0xMlwiLCBcIjFlZjU3NmI4LTZkMzgtNGY2Yy1hZWQ0LWZiYjU4MTg3ZjYwOFwiKTtcclxuXHJcbnZhciBtZSA9IGF3YWl0IHByb2plY3RBcGkuZ2V0VXNlckluZm8oKTtcclxuXHJcbnZhciBmb2N1c2VkT2JqID0gbnVsbDtcclxuXHJcbnVzZXJCaW8uc2V0VXNlckluZm8obWUpXHJcblxyXG51c2VyQmlvLnNldFVzZXJBdmF0YXIobWUuYXZhdGFyKVxyXG5cclxuY29uc3QgaW5pdGlhbENhcmRMaXN0ID0gYXdhaXQgcHJvamVjdEFwaS5nZXRJbml0aWFsQ2FyZHMoKTtcclxuXHJcbmNvbnN0IGJpb0Zvcm0gPSBuZXcgUG9wdXBXaXRoRm9ybShcIiNlZGl0LWNvbnRhaW5lclwiLCAoZGF0YSkgPT4ge1xyXG4gIGJpb0Zvcm0ucmVuZGVyTG9hZGluZyh0cnVlKTtcclxuICBwcm9qZWN0QXBpLnVwZGF0ZVVzZXJEYXRhKGRhdGEpLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgbWUgPSByZXM7XHJcbiAgICB1c2VyQmlvLnNldFVzZXJJbmZvKHJlcyk7XHJcbiAgfSkuZmluYWxseSgoKSA9PiB7XHJcbiAgICBiaW9Gb3JtLnJlbmRlckxvYWRpbmcoZmFsc2UpO1xyXG4gICAgYmlvRm9ybS5jbG9zZSgpO1xyXG4gIH0pXHJcbn0pO1xyXG5cclxuY29uc3QgYWRkQ2FyZCA9IChjYXJkRGF0YSkgPT4ge1xyXG4gIGNvbnN0IGNhcmRJdGVtID0gbmV3IENhcmQoeyBkYXRhOiBjYXJkRGF0YSwgXHJcbiAgY2xpY2tIYW5kbGVyOiAodGl0bGUsIGxpbmspID0+IHtwb3B1cEltYWdlLm9wZW4odGl0bGUsIGxpbmspfSwgXHJcbiAgbGlrZUhhbmRsZXI6IChvYmopID0+IHtcclxuICAgIGlmICghb2JqLmlzTGlrZWQpIHtcclxuICAgICAgb2JqLmxpa2VDYXJkKCk7XHJcbiAgICAgIHByb2plY3RBcGkubGlrZUNhcmQob2JqLmlkKVxyXG4gICAgICAudGhlbigocmVzKSA9PiBvYmouc2V0TGlrZUNvdW50KHJlcy5saWtlcy5sZW5ndGgpKX1cclxuICAgIGVsc2Uge1xyXG4gICAgICBvYmoudW5saWtlQ2FyZCgpOy8vaXQganVzdCBmZWVscyBiYWQgcHV0dGluZyB0aGlzIGJlaGluZCB0aGUgc2VydmVyIHJlc3BvbnNlLCBsaWtlIHRoZSB3ZWJzaXRlIGlzIGxhZ2dpbmcsIGJ1dCBJIHdpbCBpZiBJIG11c3QvL1xyXG4gICAgICBwcm9qZWN0QXBpLnVubGlrZUNhcmQob2JqLmlkKVxyXG4gICAgICAudGhlbigocmVzKSA9PiBvYmouc2V0TGlrZUNvdW50KHJlcy5saWtlcy5sZW5ndGgpKX1cclxuICAgIH0sIFxyXG4gIGRlbGV0ZUhhbmRsZXI6IChvYmopID0+IHtcclxuICAgIGZvY3VzZWRPYmogPSBvYmo7XHJcbiAgICBkZWxldGVDb25maXJtYXRvbi5vcGVuKCk7XHJcbiAgfSwgXHJcbiAgdXNlck9iajogbWV9LCBcclxuICBjYXJkU2VsZWN0b3JMaXN0KTtcclxuICBpZiAoY2FyZERhdGEub3duZXIuX2lkID09PSBtZS5faWQpIHtcclxuICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gY2FyZEl0ZW0uaW5pdGlhdGVDYXJkKHRydWUpO1xyXG4gICAgcmV0dXJuIGNhcmRFbGVtZW50O1xyXG4gIH1cclxuICBjb25zdCBjYXJkRWxlbWVudCA9IGNhcmRJdGVtLmluaXRpYXRlQ2FyZChmYWxzZSk7XHJcbiAgcmV0dXJuIGNhcmRFbGVtZW50O1xyXG59XHJcblxyXG5jb25zdCBhZGRGb3JtID0gbmV3IFBvcHVwV2l0aEZvcm0oXCIjYWRkLWNvbnRhaW5lclwiLCAoZGF0YSkgPT4ge1xyXG4gIGFkZEZvcm0ucmVuZGVyTG9hZGluZyh0cnVlKTtcclxuICBwcm9qZWN0QXBpLmFkZE5ld0NhcmQoZGF0YSkudGhlbigocmVzKSA9PiB7XHJcbiAgICByZXR1cm4gYWRkQ2FyZChyZXMpO1xyXG4gIH0pLnRoZW4oKGVsZW1lbnQpID0+IHtcclxuICAgIGNhcmRMaXN0LmFkZEl0ZW0oZWxlbWVudCk7XHJcbiAgfSkuZmluYWxseSgoKSA9PiB7XHJcbiAgICBhZGRGb3JtLnJlbmRlckxvYWRpbmcoZmFsc2UpO1xyXG4gICAgYWRkRm9ybS5jbG9zZSgpO1xyXG4gIH0pXHJcbn0pXHJcblxyXG5jb25zdCBhdmF0YXJGb3JtID0gbmV3IFBvcHVwV2l0aEZvcm0oXCIjYXZhdGFyLWNvbnRhaW5lclwiLCAoZGF0YSkgPT4ge1xyXG4gIGF2YXRhckZvcm0ucmVuZGVyTG9hZGluZyh0cnVlKTtcclxuICBwcm9qZWN0QXBpLnVwZGF0ZVVzZXJBdmF0YXIoZGF0YSkudGhlbigocmVzKSA9PiB7XHJcbiAgICB1c2VyQmlvLnNldFVzZXJBdmF0YXIocmVzLmF2YXRhcik7XHJcbiAgICBtZSA9IHJlcztcclxuICB9KS5maW5hbGx5KCgpID0+IHtcclxuICAgIGF2YXRhckZvcm0ucmVuZGVyTG9hZGluZyhmYWxzZSk7XHJcbiAgICBhdmF0YXJGb3JtLmNsb3NlKCk7XHJcbiAgfSlcclxufSlcclxuXHJcbmNvbnN0IGRlbGV0ZUNvbmZpcm1hdG9uID0gbmV3IFBvcHVwV2l0aENvbmZpcm1hdGlvbihcIiNkZWxldGUtY29udGFpbmVyXCIsICgpID0+IHtcclxuICBwcm9qZWN0QXBpLmRlbGV0ZUNhcmQoZm9jdXNlZE9iai5pZCkudGhlbihmb2N1c2VkT2JqLmRlbGV0ZUNhcmQoKSlcclxuICBkZWxldGVDb25maXJtYXRvbi5jbG9zZSgpO1xyXG4gIGZvY3VzZWRPYmogPSBudWxsO1xyXG59KVxyXG5cclxuY29uc3QgcG9wdXBJbWFnZSA9IG5ldyBQb3B1cFdpdGhJbWFnZShcIiNpbWFnZS1jb250YWluZXJcIik7XHJcblxyXG5jb25zdCBjYXJkTGlzdCA9IG5ldyBTZWN0aW9uKHtcclxuICBpdGVtczogaW5pdGlhbENhcmRMaXN0LFxyXG4gIHJlbmRlcmVyOiAoaXRlbSkgPT4ge1xyXG4gICAgY29uc3QgY2FyZCA9IGFkZENhcmQoaXRlbSk7XHJcbiAgICBjYXJkTGlzdC5hZGRJdGVtKGNhcmQpO1xyXG4gIH1cclxufSwgXCIuZ2FsbGVyeV9fY29udGFpbmVyXCIpO1xyXG5cclxuZm9ybVNlbGVjdG9ycy5mb3JFYWNoKChzZWxlY3RvcikgPT4ge1xyXG4gIGNvbnN0IHZhbGlkYXRlZEZvcm0gPSBuZXcgRm9ybVZhbGlkYXRvcihzZWxlY3RvciwgdmFsaWRhdGlvbk9iaik7XHJcbiAgdmFsaWRhdGVkRm9ybS5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbn0pO1xyXG5cclxuY2FyZExpc3QucmVuZGVySXRlbXMoKTtcclxuXHJcbmJpb0Zvcm0uc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmFkZEZvcm0uc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmF2YXRhckZvcm0uc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmRlbGV0ZUNvbmZpcm1hdG9uLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5wb3B1cEltYWdlLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5lZGl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgY29uc3QgaW5wdXRQcmVmaWxscyA9IHVzZXJCaW8uZ2V0VXNlckluZm8oKTtcclxuICBiaW9Gb3JtLm9wZW4oKTtcclxuICBpbnB1dE5hbWUudmFsdWUgPSBpbnB1dFByZWZpbGxzLm5hbWU7XHJcbiAgaW5wdXRKb2IudmFsdWUgPSBpbnB1dFByZWZpbGxzLmFib3V0O1xyXG59KTtcclxuXHJcbmFkZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIGFkZEZvcm0ub3BlbigpO1xyXG59KVxyXG5cclxuYXZhdGFyQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgYXZhdGFyRm9ybS5vcGVuKCk7XHJcbn0pXHJcblxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBBcGkge1xyXG4gICAgY29uc3RydWN0b3IoYmFzZVVybCwgdG9rZW4pIHtcclxuICAgICAgICB0aGlzLl9iYXNlVXJsID0gYmFzZVVybDtcclxuICAgICAgICB0aGlzLl90b2tlbiA9IHRva2VuO1xyXG4gICAgfVxyXG5cclxuICAgIGdldFVzZXJJbmZvKCkge1xyXG4gICAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIHtcclxuICAgICAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgICAgICAgYXV0aG9yaXphdGlvbjogYCR7dGhpcy5fdG9rZW59YFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgICAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChyZXMub2spIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XHJcbiAgICAgICAgfSlcclxuICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpXHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICBnZXRJbml0aWFsQ2FyZHMoKSB7XHJcbiAgICAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcclxuICAgICAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgICAgICAgYXV0aG9yaXphdGlvbjogYCR7dGhpcy5fdG9rZW59YFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgICAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChyZXMub2spIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XHJcbiAgICAgICAgfSlcclxuICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpXHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGVVc2VyRGF0YShkYXRhKSB7XHJcbiAgICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xyXG4gICAgICAgICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcclxuICAgICAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgICAgICAgYXV0aG9yaXphdGlvbjogYCR7dGhpcy5fdG9rZW59YCxcclxuICAgICAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICAgICAgICAgIG5hbWU6IGRhdGEubmFtZSxcclxuICAgICAgICAgICAgICAgIGFib3V0OiBkYXRhLmFib3V0XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSlcclxuICAgICAgICAgICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKHJlcy5vaykgcmV0dXJuIHJlcy5qc29uKCk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIFxyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZVVzZXJBdmF0YXIoZGF0YSkge1xyXG4gICAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XHJcbiAgICAgICAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxyXG4gICAgICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAgICAgICBhdXRob3JpemF0aW9uOiBgJHt0aGlzLl90b2tlbn1gLFxyXG4gICAgICAgICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgICAgICAgICAgYXZhdGFyOiBkYXRhLmF2YXRhclxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmIChyZXMub2spIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICBcclxuICAgIH1cclxuXHJcbiAgICBhZGROZXdDYXJkKGRhdGEpIHtcclxuICAgICAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7XHJcbiAgICAgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgICAgICAgIGF1dGhvcml6YXRpb246IGAke3RoaXMuX3Rva2VufWAsXHJcbiAgICAgICAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgICAgICAgICBuYW1lOiBkYXRhLm5hbWUsXHJcbiAgICAgICAgICAgICAgICBsaW5rOiBkYXRhLmxpbmtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9KVxyXG4gICAgICAgICAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAocmVzLm9rKSByZXR1cm4gcmVzLmpzb24oKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycilcclxuICAgICAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICBkZWxldGVDYXJkKGNhcmRJRCkge1xyXG4gICAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2NhcmRJRH1gLCB7XHJcbiAgICAgICAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcclxuICAgICAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgICAgICAgYXV0aG9yaXphdGlvbjogYCR7dGhpcy5fdG9rZW59YFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICBsaWtlQ2FyZChjYXJkSUQpIHtcclxuICAgICAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvbGlrZXMvJHtjYXJkSUR9YCwge1xyXG4gICAgICAgICAgICBtZXRob2Q6IFwiUFVUXCIsXHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgICAgICAgIGF1dGhvcml6YXRpb246IGAke3RoaXMuX3Rva2VufWBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgICAgICBpZiAocmVzLm9rKSByZXR1cm4gcmVzLmpzb24oKTtcclxuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgdW5saWtlQ2FyZChjYXJkSUQpIHtcclxuICAgICAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvbGlrZXMvJHtjYXJkSUR9YCwge1xyXG4gICAgICAgICAgICBtZXRob2Q6IFwiRGVsZXRlXCIsXHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgICAgICAgIGF1dGhvcml6YXRpb246IGAke3RoaXMuX3Rva2VufWBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgICAgICBpZiAocmVzLm9rKSByZXR1cm4gcmVzLmpzb24oKTtcclxuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBDYXJkIHtcclxuICAgIGNvbnN0cnVjdG9yKHsgZGF0YSwgY2xpY2tIYW5kbGVyLCBsaWtlSGFuZGxlciwgZGVsZXRlSGFuZGxlciwgdXNlck9iaiB9LCBzZWxlY3RvcnMpIHtcclxuICAgICAgICB0aGlzLl9uYW1lID0gZGF0YS5uYW1lO1xyXG4gICAgICAgIHRoaXMuX2xpbmsgPSBkYXRhLmxpbms7XHJcbiAgICAgICAgdGhpcy5fbGlrZXMgPSBkYXRhLmxpa2VzO1xyXG4gICAgICAgIHRoaXMuaWQgPSBkYXRhLl9pZDtcclxuICAgICAgICB0aGlzLl9zZWxlY3RvcnMgPSBzZWxlY3RvcnM7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrID0gY2xpY2tIYW5kbGVyO1xyXG4gICAgICAgIHRoaXMuX2hhbmRsZUxpa2VDbGljayA9IGxpa2VIYW5kbGVyO1xyXG4gICAgICAgIHRoaXMuX2hhbmRsZURlbGV0ZUNsaWNrID0gZGVsZXRlSGFuZGxlcjtcclxuICAgICAgICB0aGlzLl91c2VySUQgPSB1c2VyT2JqLl9pZDtcclxuICAgICAgICB0aGlzLmlzTGlrZWQgPSBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICBfZ2V0VGVtcGxhdGUoKSB7XHJcbiAgICAgICAgY29uc3QgY2FyZEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX3NlbGVjdG9ycy50ZW1wbGF0ZVNlbGVjdG9yKS5jb250ZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fc2VsZWN0b3JzLmNhcmRTZWxlY3RvcikuY2xvbmVOb2RlKHRydWUpO1xyXG4gICAgICAgIHJldHVybiBjYXJkRWxlbWVudDtcclxuICAgIH1cclxuXHJcbiAgICBfY2hlY2tMaWtlcygpIHtcclxuICAgICAgICB0aGlzLl9saWtlcy5mb3JFYWNoKChsaWtlKSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChsaWtlLl9pZCA9PSB0aGlzLl91c2VySUQpIHRoaXMuaXNMaWtlZCA9IHRydWU7XHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICBpbml0aWF0ZUNhcmQoaXNVc2VyQ2FyZCkge1xyXG4gICAgICAgIHRoaXMuX2NoZWNrTGlrZXMoKTtcclxuICAgICAgICB0aGlzLl9jYXJkRWxlbWVudCA9IHRoaXMuX2dldFRlbXBsYXRlKCk7XHJcbiAgICAgICAgY29uc3QgdGl0bGUgPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX3NlbGVjdG9ycy50aXRsZVNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLl9pbWFnZSA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fc2VsZWN0b3JzLmltYWdlU2VsZWN0b3IpO1xyXG4gICAgICAgIHRoaXMuX2xpa2UgPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX3NlbGVjdG9ycy5saWtlU2VsZWN0b3IpO1xyXG4gICAgICAgIGlmICh0aGlzLmlzTGlrZWQpIHsgXHJcbiAgICAgICAgICAgIHRoaXMuX2xpa2UuY2xhc3NMaXN0LmFkZCh0aGlzLl9zZWxlY3RvcnMubGlrZUFjdGl2ZUNsYXNzKVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5fbGlrZUNvdW50ID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9zZWxlY3RvcnMubGlrZUNvdW50U2VsZWN0b3IpO1xyXG4gICAgICAgIHRoaXMuc2V0TGlrZUNvdW50KHRoaXMuX2xpa2VzLmxlbmd0aCk7XHJcbiAgICAgICAgdGhpcy5fZGVsZXRlID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9zZWxlY3RvcnMuZGVsZXRlU2VsZWN0b3IpO1xyXG4gICAgICAgIHRpdGxlLnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcclxuICAgICAgICB0aGlzLl9pbWFnZS5hbHQgPSBgQSBwaWN0dXJlIG9mICR7dGhpcy5fbmFtZX0uYDtcclxuICAgICAgICB0aGlzLl9pbWFnZS5zcmMgPSB0aGlzLl9saW5rO1xyXG4gICAgICAgIGlmIChpc1VzZXJDYXJkKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKHRydWUpO1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fY2FyZEVsZW1lbnQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuX2RlbGV0ZS5yZW1vdmUoKTtcclxuICAgICAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycyhmYWxzZSk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NhcmRFbGVtZW50O1xyXG4gICAgfVxyXG5cclxuICAgIHNldExpa2VDb3VudChsaWtlQ291bnQpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fbGlrZUNvdW50LnRleHRDb250ZW50ID0gbGlrZUNvdW50O1xyXG4gICAgfVxyXG5cclxuICAgIF9zZXRFdmVudExpc3RlbmVycyhpc1VzZXJDYXJkKSB7XHJcbiAgICAgICAgdGhpcy5fbGlrZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLl9oYW5kbGVMaWtlQ2xpY2sodGhpcyk7XHJcbiAgICAgICAgfSlcclxuICAgICAgICB0aGlzLl9pbWFnZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sodGhpcy5fbmFtZSwgdGhpcy5fbGluayk7XHJcbiAgICAgICAgfSlcclxuICAgICAgICBpZiAoaXNVc2VyQ2FyZCkge1xyXG4gICAgICAgIHRoaXMuX2RlbGV0ZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLl9oYW5kbGVEZWxldGVDbGljayh0aGlzKTtcclxuICAgICAgICB9KX1cclxuICAgIH1cclxuXHJcbiAgICBsaWtlQ2FyZCgpIHtcclxuICAgICAgICB0aGlzLl9saWtlLmNsYXNzTGlzdC5hZGQodGhpcy5fc2VsZWN0b3JzLmxpa2VBY3RpdmVDbGFzcyk7XHJcbiAgICAgICAgdGhpcy5pc0xpa2VkID0gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICB1bmxpa2VDYXJkKCkge1xyXG4gICAgICAgIHRoaXMuX2xpa2UuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9zZWxlY3RvcnMubGlrZUFjdGl2ZUNsYXNzKTtcclxuICAgICAgICB0aGlzLmlzTGlrZWQgPSBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICBkZWxldGVDYXJkKCkge1xyXG4gICAgICAgIC8vdGhpcy5fY2FyZEVsZW1lbnQgPSBudWxsOyB0aGlzIGRvZXNuJ3Qgd29yay8vXHJcbiAgICAgICAgdGhpcy5fY2FyZEVsZW1lbnQucmVtb3ZlKCk7XHJcbiAgICB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtVmFsaWRhdG9yIHtcclxuICAgIGNvbnN0cnVjdG9yKGZvcm1TZWxlY3RvciwgdmFsaWRhdGlvbktleXMpIHtcclxuICAgICAgICB0aGlzLl9mb3JtRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZm9ybVNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLl9rZXlzID0gdmFsaWRhdGlvbktleXM7XHJcbiAgICB9XHJcblxyXG4gICAgZW5hYmxlVmFsaWRhdGlvbigpIHtcclxuICAgICAgICB0aGlzLl9mb3JtRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcclxuICAgICAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgfSlcclxuICAgICAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgfVxyXG5cclxuICAgIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgICAgICB0aGlzLl9pbnB1dExpc3QgPSBbLi4udGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9rZXlzLmlucHV0U2VsZWN0b3IpXTtcclxuICAgICAgICB0aGlzLl9idXR0b25FbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9rZXlzLnN1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgICAgIHRoaXMuX2Zvcm1FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJyZXNldFwiLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7IFxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xyXG4gICAgICAgICAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpIHtcclxuICAgICAgICBpZiAoIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCkge1xyXG4gICAgICAgICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQsIGlucHV0RWxlbWVudC52YWxpZGF0aW9uTWVzc2FnZSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIF9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQsIGVycm9yTWVzc2FnZSkge1xyXG4gICAgICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYC5wb3B1cF9fZXJyb3JfdHlwZV8ke2lucHV0RWxlbWVudC5pZH1gKTtcclxuICAgICAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9rZXlzLmlucHV0RXJyb3JDbGFzcyk7XHJcbiAgICAgICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gZXJyb3JNZXNzYWdlO1xyXG4gICAgICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2tleXMuZXJyb3JDbGFzcyk7XHJcbiAgICB9O1xyXG5cclxuICAgIF9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpIHtcclxuICAgICAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAucG9wdXBfX2Vycm9yX3R5cGVfJHtpbnB1dEVsZW1lbnQuaWR9YCk7XHJcbiAgICAgICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fa2V5cy5pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IFwiXCI7XHJcbiAgICAgICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fa2V5cy5lcnJvckNsYXNzKTsgXHJcbiAgICB9XHJcblxyXG4gICAgX3RvZ2dsZUJ1dHRvblN0YXRlKCkge1xyXG4gICAgICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQodGhpcy5faW5wdXRMaXN0KSkge1xyXG4gICAgICAgICAgICB0aGlzLl9idXR0b25FbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fa2V5cy5pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgICAgICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiLCB0cnVlKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLl9idXR0b25FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fa2V5cy5pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgICAgICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIF9oYXNJbnZhbGlkSW5wdXQoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lucHV0TGlzdC5zb21lKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgICAgICAgcmV0dXJuICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQ7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcclxuICAgIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgICAgICB0aGlzLl9wb3B1cEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgICAgIHRoaXMuX2Nsb3NlQnV0dG9uID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2V4aXQtYnV0dG9uXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIF9oYW5kbGVFc2NDbG9zZSA9IChldnQpID0+IHtcclxuICAgICAgICBpZiAoZXZ0LmtleSA9PT0gXCJFc2NhcGVcIikge1xyXG4gICAgICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIF9oYW5kbGVDbGlja0Nsb3NlID0gKGV2dCkgPT4ge1xyXG4gICAgICAgIGlmIChldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcInBvcHVwXCIpKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgY2xvc2UoKSB7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJpbnZpc2libGVcIik7XHJcbiAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gICAgfVxyXG5cclxuICAgIG9wZW4oKSB7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJpbnZpc2libGVcIik7XHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gICAgfVxyXG5cclxuICAgIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgICAgIHRoaXMuX2Nsb3NlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIHRoaXMuX3BvcHVwRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIHRoaXMuX2hhbmRsZUNsaWNrQ2xvc2UpO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhDb25maXJtYXRpb24gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBjbGlja0hhbmRsZXIpIHtcclxuICAgICAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLl9jbGlja0hhbmRsZXIgPSBjbGlja0hhbmRsZXI7XHJcbiAgICAgICAgdGhpcy5fY29uZmlybUJ1dHRvbiA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19idXR0b25cIik7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlybUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuX2NsaWNrSGFuZGxlcigpO1xyXG4gICAgICAgIH0gKVxyXG4gICAgICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBzdWJtaXRIYW5kbGVyKSB7XHJcbiAgICAgICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgICAgICAgdGhpcy5fc3VibWl0SGFuZGxlciA9IHN1Ym1pdEhhbmRsZXI7XHJcbiAgICAgICAgdGhpcy5fZm9ybUVsZW1lbnQgPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybVwiKTtcclxuICAgICAgICB0aGlzLl9zdWJtaXRCdXR0b24gPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19idXR0b25cIik7XHJcbiAgICB9XHJcblxyXG4gICAgX2dldElucHV0VmFsdWVzKCkge1xyXG4gICAgICAgIGNvbnN0IGlucHV0TGlzdCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIucG9wdXBfX2lucHV0XCIpO1xyXG4gICAgICAgIGNvbnN0IHJlc3VsdHMgPSB7fTtcclxuICAgICAgICBpbnB1dExpc3QuZm9yRWFjaCgoaW5wdXQpID0+IHtcclxuICAgICAgICAgICAgcmVzdWx0c1tgJHtpbnB1dC5uYW1lfWBdID0gaW5wdXQudmFsdWU7XHJcbiAgICAgICAgfSlcclxuICAgICAgICByZXR1cm4gcmVzdWx0cztcclxuICAgIH1cclxuXHJcbiAgICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgICAgICB0aGlzLl9mb3JtRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcclxuICAgICAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIGNvbnN0IGlucHV0cyA9IHRoaXMuX2dldElucHV0VmFsdWVzKCk7XHJcbiAgICAgICAgICAgIHRoaXMuX3N1Ym1pdEhhbmRsZXIoaW5wdXRzKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7IFxyXG4gICAgfVxyXG5cclxuICAgIGNsb3NlKCkge1xyXG4gICAgICAgIHRoaXMuX2Zvcm1FbGVtZW50LnJlc2V0KCk7XHJcbiAgICAgICAgc3VwZXIuY2xvc2UoKTtcclxuICAgIH1cclxuXHJcbiAgICBvcGVuKCkge1xyXG4gICAgICAgIHRoaXMuX2Zvcm1FbGVtZW50LnJlc2V0KCk7IC8vb2RkIHRoYXQgdGhpcyByZXNldCB0cmlnZ2VycyB0aGUgcmVzZXQgbGlzdGVuZXIgaW4gdGhlIHZhbGlkYXRvciwgd2hlbiB0aGUgb25lIGluIGNsb3NlIGRvZXMgbm90Ly9cclxuICAgICAgICBzdXBlci5vcGVuKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmVuZGVyTG9hZGluZyA9IChpc0xvYWRpbmcpID0+IHtcclxuICAgICAgICBpZiAoaXNMb2FkaW5nKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSBcIlNhdmluZy4uLlwiO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gdGhpcy5fc3VibWl0QnV0dG9uLm5hbWU7IFxyXG4gICAgfVxyXG59IiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcclxuICAgIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgICAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuICAgIH1cclxuXHJcbiAgICBvcGVuKHRpdGxlLCBsaW5rKSB7XHJcbiAgICAgICAgY29uc3QgcG9wdXBJbWFnZSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19pbWFnZVwiKTtcclxuICAgICAgICBjb25zdCBwb3B1cEltYWdlVGl0bGUgPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9faW1hZ2UtdGl0bGVcIik7XHJcbiAgICAgICAgcG9wdXBJbWFnZS5zcmMgPSBsaW5rO1xyXG4gICAgICAgIHBvcHVwSW1hZ2UuYWx0ID0gYEltYWdlIG9mICR7dGl0bGV9YDtcclxuICAgICAgICBwb3B1cEltYWdlVGl0bGUudGV4dENvbnRlbnQgPSB0aXRsZTtcclxuICAgICAgICBzdXBlci5vcGVuKCk7XHJcbiAgICB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcclxuICAgIGNvbnN0cnVjdG9yKHsgaXRlbXMsIHJlbmRlcmVyIH0sIGNvbnRhaW5lclNlbGVjdG9yKSB7XHJcbiAgICAgICAgdGhpcy5faXRlbXMgPSBpdGVtcztcclxuICAgICAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gICAgICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29udGFpbmVyU2VsZWN0b3IpO1xyXG4gICAgfVxyXG5cclxuICAgIHJlbmRlckl0ZW1zKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9pdGVtcy5mb3JFYWNoKGl0ZW0gPT4ge3RoaXMuX3JlbmRlcmVyKGl0ZW0pfSk7XHJcbiAgICB9XHJcblxyXG4gICAgYWRkSXRlbShlbGVtZW50KSB7XHJcbiAgICAgICAgdGhpcy5fY29udGFpbmVyLnByZXBlbmQoZWxlbWVudCk7XHJcbiAgICB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyB7XHJcbiAgICBjb25zdHJ1Y3Rvcih7IHNlbGVjdG9ycyB9KSB7XHJcbiAgICAgICAgdGhpcy5fc2VsZWN0b3JzID0gc2VsZWN0b3JzO1xyXG4gICAgICAgIHRoaXMuX3VzZXJOYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9zZWxlY3RvcnMubmFtZVNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLl91c2VySm9iID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9zZWxlY3RvcnMuam9iU2VsZWN0b3IpO1xyXG4gICAgICAgIHRoaXMuX3VzZXJBdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX3NlbGVjdG9ycy5pbWFnZVNlbGVjdG9yKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRVc2VySW5mbygpIHtcclxuICAgICAgICByZXR1cm4ge25hbWU6IHRoaXMuX3VzZXJOYW1lLnRleHRDb250ZW50LCBhYm91dDogdGhpcy5fdXNlckpvYi50ZXh0Q29udGVudH1cclxuICAgIH1cclxuXHJcbiAgICBzZXRVc2VySW5mbyhkYXRhKSB7XHJcbiAgICAgICAgdGhpcy5fdXNlck5hbWUudGV4dENvbnRlbnQgPSBkYXRhLm5hbWU7XHJcbiAgICAgICAgdGhpcy5fdXNlckpvYi50ZXh0Q29udGVudCA9IGRhdGEuYWJvdXQ7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0VXNlckF2YXRhcihsaW5rKSB7XHJcbiAgICAgICAgdGhpcy5fdXNlckF2YXRhci5zcmMgPSBsaW5rO1xyXG4gICAgfVxyXG59IiwiY29uc3QgdmFsaWRhdGlvbk9iaiA9IHtcclxuICAgIGlucHV0U2VsZWN0b3I6IFwiLnBvcHVwX19pbnB1dFwiLFxyXG4gICAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLnBvcHVwX19idXR0b25cIixcclxuICAgIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwicG9wdXBfX2J1dHRvbl9kaXNhYmxlZFwiLFxyXG4gICAgaW5wdXRFcnJvckNsYXNzOiBcInBvcHVwX19pbnB1dF90eXBlX2Vycm9yXCIsXHJcbiAgICBlcnJvckNsYXNzOiBcInBvcHVwX19lcnJvcl92aXNpYmxlXCJcclxufVxyXG5cclxuY29uc3QgY2FyZFNlbGVjdG9yTGlzdCA9IHtcclxuICB0ZW1wbGF0ZVNlbGVjdG9yOiBcIiNjYXJkLXRlbXBsYXRlXCIsXHJcbiAgbGlrZUFjdGl2ZUNsYXNzOiBcImdhbGxlcnlfX2J1dHRvbl9hY3RpdmVcIixcclxuICBkZWxldGVTZWxlY3RvcjogXCIuZ2FsbGVyeV9fZGVsZXRlLWJ1dHRvblwiLFxyXG4gIGxpa2VTZWxlY3RvcjogXCIuZ2FsbGVyeV9fYnV0dG9uXCIsXHJcbiAgaW1hZ2VTZWxlY3RvcjogXCIuZ2FsbGVyeV9faW1hZ2VcIixcclxuICB0aXRsZVNlbGVjdG9yOiBcIi5nYWxsZXJ5X190aXRsZVwiLFxyXG4gIGNhcmRTZWxlY3RvcjogXCIuZ2FsbGVyeV9fY2VsbFwiLFxyXG4gIGxpa2VDb3VudFNlbGVjdG9yOiBcIi5nYWxsZXJ5X19saWtlLWNvdW50XCJcclxufVxyXG5cclxuY29uc3QgaW5wdXROYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNuYW1lXCIpO1xyXG5jb25zdCBpbnB1dEpvYiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjam9iXCIpO1xyXG5jb25zdCBlZGl0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19lZGl0LWJ1dHRvblwiKTtcclxuY29uc3QgYWRkQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hZGQtYnV0dG9uXCIpO1xyXG5jb25zdCBhdmF0YXJCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2F2YXRhci1idXR0b25cIik7XHJcbmNvbnN0IGZvcm1TZWxlY3RvcnMgPSBbXCIjZWRpdC1iaW9cIiwgXCIjYWRkLWltYWdlXCIsIFwiI2VkaXQtYXZhdGFyXCJdO1xyXG5jb25zdCB1c2VyU2VsZWN0b3JzID0ge25hbWVTZWxlY3RvcjogXCIucHJvZmlsZV9fbmFtZVwiLCBqb2JTZWxlY3RvcjogXCIucHJvZmlsZV9fY2FyZWVyXCIsIGltYWdlU2VsZWN0b3I6IFwiLnByb2ZpbGVfX2F2YXRhclwifTtcclxuXHJcblxyXG5leHBvcnQgeyB2YWxpZGF0aW9uT2JqLCBjYXJkU2VsZWN0b3JMaXN0LCBpbnB1dE5hbWUsIGlucHV0Sm9iLCBlZGl0QnV0dG9uLCBhZGRCdXR0b24sIGZvcm1TZWxlY3RvcnMsIHVzZXJTZWxlY3RvcnMsIGF2YXRhckJ1dHRvbiB9IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIGRlZmluaXRpb24pIHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqLCBwcm9wKSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKTsgfSIsIi8vIHN0YXJ0dXBcbi8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuLy8gVGhpcyBlbnRyeSBtb2R1bGUgdXNlZCAnbW9kdWxlJyBzbyBpdCBjYW4ndCBiZSBpbmxpbmVkXG52YXIgX193ZWJwYWNrX2V4cG9ydHNfXyA9IF9fd2VicGFja19yZXF1aXJlX18oNjI3KTtcbiJdLCJuYW1lcyI6WyJ3ZWJwYWNrVGhlbiIsIndlYnBhY2tFeHBvcnRzIiwid2VicGFja0Vycm9yIiwiY29tcGxldGVRdWV1ZSIsImNvbXBsZXRlRnVuY3Rpb24iLCJxdWV1ZUZ1bmN0aW9uIiwidXNlckJpbyIsIlVzZXJJbmZvIiwic2VsZWN0b3JzIiwidXNlclNlbGVjdG9ycyIsInByb2plY3RBcGkiLCJBcGkiLCJtZSIsImdldFVzZXJJbmZvIiwiZm9jdXNlZE9iaiIsInNldFVzZXJJbmZvIiwic2V0VXNlckF2YXRhciIsImF2YXRhciIsImluaXRpYWxDYXJkTGlzdCIsImdldEluaXRpYWxDYXJkcyIsImJpb0Zvcm0iLCJQb3B1cFdpdGhGb3JtIiwiZGF0YSIsInJlbmRlckxvYWRpbmciLCJ1cGRhdGVVc2VyRGF0YSIsInRoZW4iLCJyZXMiLCJmaW5hbGx5IiwiY2xvc2UiLCJhZGRDYXJkIiwiY2FyZERhdGEiLCJjYXJkSXRlbSIsIkNhcmQiLCJjbGlja0hhbmRsZXIiLCJ0aXRsZSIsImxpbmsiLCJwb3B1cEltYWdlIiwib3BlbiIsImxpa2VIYW5kbGVyIiwib2JqIiwiaXNMaWtlZCIsInVubGlrZUNhcmQiLCJpZCIsInNldExpa2VDb3VudCIsImxpa2VzIiwibGVuZ3RoIiwibGlrZUNhcmQiLCJkZWxldGVIYW5kbGVyIiwiZGVsZXRlQ29uZmlybWF0b24iLCJ1c2VyT2JqIiwiY2FyZFNlbGVjdG9yTGlzdCIsIm93bmVyIiwiX2lkIiwiaW5pdGlhdGVDYXJkIiwiYWRkRm9ybSIsImFkZE5ld0NhcmQiLCJlbGVtZW50IiwiY2FyZExpc3QiLCJhZGRJdGVtIiwiYXZhdGFyRm9ybSIsInVwZGF0ZVVzZXJBdmF0YXIiLCJQb3B1cFdpdGhDb25maXJtYXRpb24iLCJkZWxldGVDYXJkIiwiUG9wdXBXaXRoSW1hZ2UiLCJTZWN0aW9uIiwiaXRlbXMiLCJyZW5kZXJlciIsIml0ZW0iLCJjYXJkIiwiZm9ybVNlbGVjdG9ycyIsInNlbGVjdG9yIiwiRm9ybVZhbGlkYXRvciIsInZhbGlkYXRpb25PYmoiLCJlbmFibGVWYWxpZGF0aW9uIiwicmVuZGVySXRlbXMiLCJzZXRFdmVudExpc3RlbmVycyIsImVkaXRCdXR0b24iLCJpbnB1dFByZWZpbGxzIiwiaW5wdXROYW1lIiwibmFtZSIsImlucHV0Sm9iIiwiYWJvdXQiLCJhZGRCdXR0b24iLCJhdmF0YXJCdXR0b24iLCJjb25zdHJ1Y3RvciIsImJhc2VVcmwiLCJ0b2tlbiIsInRoaXMiLCJfYmFzZVVybCIsIl90b2tlbiIsImZldGNoIiwiaGVhZGVycyIsImF1dGhvcml6YXRpb24iLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzIiwiY2F0Y2giLCJlcnIiLCJjb25zb2xlIiwibG9nIiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJjYXJkSUQiLCJfbmFtZSIsIl9saW5rIiwiX2xpa2VzIiwiX3NlbGVjdG9ycyIsIl9oYW5kbGVDYXJkQ2xpY2siLCJfaGFuZGxlTGlrZUNsaWNrIiwiX2hhbmRsZURlbGV0ZUNsaWNrIiwiX3VzZXJJRCIsIl9nZXRUZW1wbGF0ZSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsInRlbXBsYXRlU2VsZWN0b3IiLCJjb250ZW50IiwiY2FyZFNlbGVjdG9yIiwiY2xvbmVOb2RlIiwiX2NoZWNrTGlrZXMiLCJmb3JFYWNoIiwibGlrZSIsImlzVXNlckNhcmQiLCJfY2FyZEVsZW1lbnQiLCJ0aXRsZVNlbGVjdG9yIiwiX2ltYWdlIiwiaW1hZ2VTZWxlY3RvciIsIl9saWtlIiwibGlrZVNlbGVjdG9yIiwiY2xhc3NMaXN0IiwiYWRkIiwibGlrZUFjdGl2ZUNsYXNzIiwiX2xpa2VDb3VudCIsImxpa2VDb3VudFNlbGVjdG9yIiwiX2RlbGV0ZSIsImRlbGV0ZVNlbGVjdG9yIiwidGV4dENvbnRlbnQiLCJhbHQiLCJzcmMiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJyZW1vdmUiLCJsaWtlQ291bnQiLCJhZGRFdmVudExpc3RlbmVyIiwiZm9ybVNlbGVjdG9yIiwidmFsaWRhdGlvbktleXMiLCJfZm9ybUVsZW1lbnQiLCJfa2V5cyIsImV2dCIsInByZXZlbnREZWZhdWx0IiwiX2lucHV0TGlzdCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJpbnB1dFNlbGVjdG9yIiwiX2J1dHRvbkVsZW1lbnQiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsIl90b2dnbGVCdXR0b25TdGF0ZSIsImlucHV0RWxlbWVudCIsIl9jaGVja0lucHV0VmFsaWRpdHkiLCJ2YWxpZGl0eSIsInZhbGlkIiwiX2hpZGVJbnB1dEVycm9yIiwiX3Nob3dJbnB1dEVycm9yIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJlcnJvck1lc3NhZ2UiLCJlcnJvckVsZW1lbnQiLCJpbnB1dEVycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwiX2hhc0ludmFsaWRJbnB1dCIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJzZXRBdHRyaWJ1dGUiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzb21lIiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwia2V5IiwidGFyZ2V0IiwiY29udGFpbnMiLCJfcG9wdXBFbGVtZW50IiwiX2Nsb3NlQnV0dG9uIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIl9oYW5kbGVFc2NDbG9zZSIsIl9oYW5kbGVDbGlja0Nsb3NlIiwic3VwZXIiLCJfY2xpY2tIYW5kbGVyIiwiX2NvbmZpcm1CdXR0b24iLCJzdWJtaXRIYW5kbGVyIiwiaXNMb2FkaW5nIiwiX3N1Ym1pdEJ1dHRvbiIsIl9zdWJtaXRIYW5kbGVyIiwiX2dldElucHV0VmFsdWVzIiwiaW5wdXRMaXN0IiwicmVzdWx0cyIsImlucHV0IiwidmFsdWUiLCJpbnB1dHMiLCJyZXNldCIsInBvcHVwSW1hZ2VUaXRsZSIsImNvbnRhaW5lclNlbGVjdG9yIiwiX2l0ZW1zIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsInByZXBlbmQiLCJfdXNlck5hbWUiLCJuYW1lU2VsZWN0b3IiLCJfdXNlckpvYiIsImpvYlNlbGVjdG9yIiwiX3VzZXJBdmF0YXIiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJ1bmRlZmluZWQiLCJleHBvcnRzIiwibW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIlN5bWJvbCIsInF1ZXVlIiwiZm4iLCJyIiwicHVzaCIsImEiLCJoYXNBd2FpdCIsImN1cnJlbnREZXBzIiwib3V0ZXJSZXNvbHZlIiwiaXNFdmFsdWF0aW5nIiwibmVzdGVkIiwid2hlbkFsbCIsImRlcHMiLCJvblJlc29sdmUiLCJvblJlamVjdCIsIm1hcCIsImRlcCIsImkiLCJwcm9taXNlIiwicmVzb2x2ZSIsInJlaiIsInJlamVjdEZuIiwiZSIsInJldCIsIndyYXBEZXBzIiwiZ2V0UmVzdWx0IiwiZCIsImRlZmluaXRpb24iLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCJdLCJzb3VyY2VSb290IjoiIn0=